#include <stdio.h>
#include <stdlib.h>
typedef struct node
{
    int data;
    struct node *next;
} NODE;

NODE *insert_at_end(NODE *head, int n)
{
    NODE *new_node = (NODE *)malloc(sizeof(NODE));
    new_node->data = n;
    new_node->next = NULL;
    if (head == NULL)
    {
        head = new_node;
    }
    else
    {
        NODE *temp = head;
        while (temp->next != NULL)
        {
            temp = temp->next;
        }
        temp->next = new_node;
    }
    return head;
}

NODE *Rearrange(NODE *head)
{
    NODE *temp = head;
    NODE *new_node = (NODE *)malloc(sizeof(NODE));
    new_node->data = head->data;
    new_node->next = NULL;
    while (temp->next != NULL)
    {
        temp = temp->next;
    }
    temp->next = new_node;
    head = head->next;
    return head;
}

void display(NODE *head)
{
    NODE *temp = head;
    if (head == NULL)
    {
        printf("Node is empty \n");
    }
    else
    {
        while (temp != NULL)
        {
            printf("%d->", temp->data);
            temp = temp->next;
        }
        printf("NULL");
    }
}

int main(int argc, char const *argv[])
{
    NODE *head = NULL;
    int n;
    for (int i = 0; i < 5; i++)
    {
        scanf("%d", &n);
        head = insert_at_end(head, n);
    }
    int k;
    scanf("%d", &k);
    if (k > 5)
    {
        display(head);
    }
    else
    {
        for (int i = 1; i < k; i++)
        {
            head = Rearrange(head);
        }
        display(head);
    }
    return 0;
}
